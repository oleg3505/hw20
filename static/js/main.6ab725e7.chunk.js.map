{"version":3,"sources":["Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","onTick","console","log","state","minutes","secounds","stop","setState","start","Math","floor","time","step","autostart","resetTimer","bind","this","tiker","setInterval","ceil","clearInterval","timeOut","className","substr","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAIaA,EAAK,kDAEd,WAAYC,GAAO,IAAD,8BACd,cAAMA,IA6CVC,OAAS,WACLC,QAAQC,IAAI,0FAA4C,GAArB,EAAKC,MAAMC,QAAgB,EAAKD,MAAME,UAAY,MA/CvE,EAmDlBC,KAAO,WACH,EAAKC,SAAS,CAACC,OAAQ,IACvBP,QAAQC,IAAI,qFArDE,EAyDlBM,MAAQ,WACJ,EAAKD,SAAU,CAACC,OAAQ,IACxBP,QAAQC,IAAI,0FAzDZ,EAAKC,MAAQ,CACTC,QAASK,KAAKC,MAAM,EAAKX,MAAMY,KAAO,IAAO,IAC7CN,SAAUI,KAAKC,MAAM,EAAKX,MAAMY,KAAM,IAAM,KAC5CC,KAAO,EAAKb,MAAMa,KAClBJ,MAAQ,EAAKT,MAAMc,UACnBC,YAAa,GAIjB,EAAKN,MAAQ,EAAKA,MAAMO,KAAX,gBACb,EAAKT,KAAO,EAAKA,KAAKS,KAAV,gBAZE,EAFJ,qDAmBd,WAAqB,IAAD,OAEhBC,KAAKC,MAAQC,aAAa,WACnB,EAAKf,MAAMK,QACV,EAAKD,SAAS,CAACF,SAAUI,KAAKU,KAAoD,KAA9C,EAAKhB,MAAME,SAAW,EAAE,EAAKN,MAAMa,KAAK,MAAW,MACvF,EAAKZ,SAED,EAAKG,MAAME,UAAY,GAA4B,IAAvB,EAAKF,MAAMC,SAAiB,EAAKD,MAAMW,WACnE,EAAKP,SAAS,CACVH,QAASK,KAAKC,MAAM,EAAKX,MAAMY,KAAO,IAAO,IAC7CN,SAAUI,KAAKC,MAAM,EAAKX,MAAMY,KAAM,IAAM,OAC1C,EAAKR,MAAME,UAAY,GAA4B,IAAvB,EAAKF,MAAMC,SAE7CgB,cAAc,EAAKH,OACnB,EAAKV,SAAS,CAACC,OAAQ,IACvB,EAAKD,SAAS,CAACH,QAAS,EAAGC,SAAU,EAAGgB,QAAS,8DAC5C,EAAKlB,MAAME,SAAW,GAA4B,IAAvB,EAAKF,MAAMC,SAC3C,EAAKG,SAAS,CAACF,SAAU,GAAK,EAAKF,MAAME,SAAUD,QAAS,EAAKD,MAAMC,QAAU,OAIrF,OAxCE,oBAyEd,WAEI,OACI,sBAAKkB,UAAU,QAAf,UACA,8BAGI,gCAAM,IAAKN,KAAKb,MAAMC,SAASmB,QAAQ,GAAvC,IAA+D,MAAlBP,KAAKjB,MAAMa,MAAc,IAAMH,KAAKC,MAAMM,KAAKb,MAAME,WAAWkB,QAAQ,IAAM,IAAMP,KAAKb,MAAME,UAAUkB,QAAQ,QAElK,sBAAKD,UAAU,UAAf,UACI,wBAAQA,UAAU,SAASE,QAASR,KAAKR,MAAzC,mBACA,wBAAQc,UAAU,SAASE,QAASR,KAAKV,KAAzC,qBAKJ,6BAAKU,KAAKb,MAAMkB,iBAzFV,GAAuBI,IAAMC,WCOhCC,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACA,cAAC,EAAD,CAAOX,KAAQ,KAAOE,WAAa,EAAMD,KAAM,SCMpCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6ab725e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nexport const Clock = class Clock extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            minutes: Math.floor(this.props.time / 1000 / 60),\r\n            secounds: Math.floor(this.props.time %60000/1000),\r\n            step : this.props.step,\r\n            start : this.props.autostart,\r\n            resetTimer : true\r\n            \r\n            \r\n        }\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        \r\n    \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.tiker = setInterval((()=>{\r\n            if(this.state.start){\r\n                this.setState({secounds: Math.ceil((this.state.secounds - 1*this.props.step/1000)*100)/100 })\r\n                this.onTick()\r\n                \r\n                if (this.state.secounds <= 0 && this.state.minutes === 0 && this.state.resetTimer ) {\r\n                    this.setState({\r\n                        minutes: Math.floor(this.props.time / 1000 / 60),\r\n                        secounds: Math.floor(this.props.time %60000/1000)})\r\n                }else if (this.state.secounds <= 0 && this.state.minutes === 0 ) {\r\n                    \r\n                    clearInterval(this.tiker);\r\n                    this.setState({start : false})\r\n                    this.setState({minutes: 0, secounds: 0, timeOut: \"Час вийшов)\" })\r\n                }else if(this.state.secounds < 0 && this.state.minutes !== 0){\r\n                    this.setState({secounds: 60 + this.state.secounds, minutes: this.state.minutes - 1})\r\n                }                  \r\n            }\r\n                \r\n            }), 1000);    \r\n    }\r\n\r\n    \r\n    \r\n\r\n    \r\n\r\n    onTick = () =>{\r\n        console.log('Залишилось часу:' + ((this.state.minutes * 60) + this.state.secounds) + 'c')\r\n    }\r\n\r\n\r\n    stop = () =>{\r\n        this.setState({start : false})\r\n        console.log('Таймер на паузі')\r\n\r\n    }\r\n\r\n    start = () =>{\r\n        this.setState( {start : true})\r\n        console.log('Таймер запущено')\r\n    }\r\n\r\n    \r\n\r\n    \r\n        \r\n      \r\n  \r\n    \r\n    \r\n    \r\n    render() {\r\n        \r\n        return ( \r\n            <div className='timer'>          \r\n            <div>\r\n            \r\n               \r\n                <h2>{('0'+ this.state.minutes).substr(-2)}:{ this.props.step===100 ? ('0' + Math.floor(this.state.secounds)).substr(-2) : ('0' + this.state.secounds).substr(-2) }</h2>\r\n            </div>\r\n            <div className='buttons'> \r\n                <button className='button' onClick={this.start} >START</button>\r\n                <button className='button' onClick={this.stop} >STOP</button>\r\n\r\n            </div>\r\n           \r\n            \r\n            <h1>{this.state.timeOut}</h1>\r\n\r\n           </div>\r\n        )\r\n    }\r\n}","import {Clock} from './Clock.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Clock time = {11000} autostart = {true} step={1000} />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}